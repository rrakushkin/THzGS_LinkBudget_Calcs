clear; clc; close all;
addpath(genpath('./functions'));

% Constants -----------------------------------
kB = physconst('Boltzmann');   % [J/K]
T0 = 290;                      % [K]
c  = physconst('LightSpeed');  % [m/s]

% Link budget params -----------------------------------
sat_tx        = 25;              % [dBm]
geff_satAnt   = 44;              % [dBi]  (TX antenna gain)
directivity_gsAnt = [54, 56, 59, 60, 62, 63, 64, 65, 66, 68, 70, 72, 74];  % [dBi] sweep
numElem       = 16;              % sat array (used inside linkBudget1)
distElem      = 0.0045;          % [m]
freq_GHz      = 225;             % [GHz] (for absLossSlant)
freq_Hz       = freq_GHz*1e9;    % [Hz]   (for linkBudget1)
gs_pol_type   = 'linear';
pol_angle     = 45;              % [deg] polarization mismatch
gs_ptg_error  = 0.05;            % [deg]
sat_ptg_error = 0.10;            % [deg]
wg_len_mm     = 3;               % [mm]
cx_len_m      = 2;               % [m]
NF_dB         = 8;               % [dB] receiver noise figure

% Assume BPSK thus bps = baude rate as well
M = 2; % BPSK
b = log2(M);
target_bps = 100e6;
rolloff = 0.5;
BW = target_bps*(1+rolloff)/b;
targetBER = 1e-4;

% GS Location and Geometry -----------------------------------
gs_lat  = 42.3378054237531;
atmType = "InterpSummer";

HOSL_km = 37e-3;                 % [km] GS height above sea level
alt_km  = 400;                   % [km]
elevDeg = linspace(0,90,100);
elevDeg = elevDeg(:);  

Re_km     = 6371;
GS_pos_km = Re_km + HOSL_km;
GS_pos_m  = GS_pos_km*1e3;
alt_m     = alt_km*1e3;

% Slant range [m]
slant_m = sqrt(GS_pos_m.^2 .* sind(elevDeg).^2 + 2*GS_pos_m*alt_m + alt_m.^2) ...
        - GS_pos_m .* sind(elevDeg);

Ne = numel(elevDeg);
Ng = numel(directivity_gsAnt);

% Environment Losses and Noise -----------------------------------
[T1,P1,e1]    = atmProfile(HOSL_km,"Annual 15");
[T2S,P2S,e2S] = atmProfile(HOSL_km,"Summer 45");
[gs_T,~,~]    = InterpAtm({T1,P1,e1},{T2S,P2S,e2S}, gs_lat);

T_gs_s = max(max(gs_T), 300);                    % scalar worst-case [K]
Tsys   = (10^(NF_dB/10)-1)*T0 + T_gs_s;          % [K]

% Atmospheric absorption (alt in km, f in GHz)
labs3d = absLossSlant(alt_km, freq_GHz, elevDeg.', 0.1, 0, atmType, gs_lat);
labs   = squeeze(labs3d(1,1,:));


% Power Received -----------------------------------

% Full HPBW (degrees) from directivity (linear): theta â‰ˆ sqrt(41253 / Dlin)
Dlin_gs     = 10.^(directivity_gsAnt/10);
GS_HPBW_deg = sqrt(41253 ./ Dlin_gs) 

p_rx = zeros(Ne, Ng);
for k = 1:Ne
    d_k   = slant_m(k);   % [m]
    LabsK = labs(k);      % [dB]
    for i = 1:Ng
        p_rx(k,i) = linkBudget1( ...
            sat_tx, geff_satAnt, directivity_gsAnt(i), GS_HPBW_deg(i), ...
            freq_Hz, numElem, distElem, ...
            d_k, LabsK, ...
            sat_ptg_error, gs_ptg_error, gs_pol_type, pol_angle, ...
            wg_len_mm, cx_len_m);                      % [dBm]
    end
end

% Link Margin Calculation -----------------------------------
SNR_dB = (p_rx - 30) - 10*log10(kB*Tsys*BW);
EbNo_min_dB = fzero(@(x) berawgn(x,"psk",M,"nondiff") - targetBER, 10);
EbNo_expected = SNR_dB + 10*log10((1+rolloff)/(b));
LinkMargin = EbNo_expected - EbNo_min_dB;

% Plotting -----------------------------------

colors = [ ...
  31 119 180;   % blue
  255 127 14;   % orange
  44 160 44;    % green
  214 39 40;    % red
  148 103 189;  % purple
  140 86 75;    % brown
  227 119 194;  % pink
  127 127 127;  % gray
  188 189 34;   % olive
  23 190 207;   % cyan
  174 199 232;  % light blue
  255 187 120;  % light orange
  152 223 138;  % light green
  255 152 150;  % light red
  197 176 213;  % light purple
  196 156 148;  % light brown
  247 182 210;  % light pink
  199 199 199;  % light gray
  219 219 141;  % light olive
  158 218 229;  % light cyan
  57 59 121;    % indigo
  82 84 163;    % periwinkle
  107 110 207;  % blue-violet
  156 158 222;  % soft violet
  99 121 57;    % olive drab
  140 162 82;   % green-yellow
  181 207 107;  % lime
  206 219 156;  % pale lime
  140 109 49;   % mustard brown
  189 158 57;   % mustard
  231 186 82;   % sand
  231 203 148;  % pale sand
  132 60 57;    % maroon
  173 73 74;    % brick red
  214 97 107;   % salmon
  231 150 156;  % light salmon
] /255;

figure; hold on;
for i = 1:Ng
    plot(elevDeg, LinkMargin(:,i), 'LineWidth', 1.5, ...
        'Color', colors(i,:), ...
        'DisplayName', sprintf('%.0f dBi', directivity_gsAnt(i)));
end
ylim ([-50 50])
xlim ([5 90])
yline(0,'k-','LineWidth',1,'HandleVisibility','off');
yline(3,'k--','LineWidth',1.5,'HandleVisibility','off');
grid on;
xlabel('Elevation Angle [deg]');
ylabel('Link Margin (dB)');

legend('show','Location','northwest');
title(sprintf('Link Margin @ R_b=100 Mbps (BPSK, \\alpha=%.1f), %.0f GHz', rolloff, freq_GHz));